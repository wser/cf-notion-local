{"code":"!function(t){var e={};function n(o){if(e[o])return e[o].exports;var i=e[o]={i:o,l:!1,exports:{}};return t[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var i in t)n.d(o,i,function(e){return t[e]}.bind(null,i));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,\"a\",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p=\"\",n(n.s=0)}([function(t,e){const n=\"vikt0r.com\",o={\"\":\"b7d688b35fcc4932be51534b7e66c4da\"},i={},r=[],s=[];Object.keys(o).forEach(t=>{const e=o[t];r.push(t),s.push(e),i[e]=t}),addEventListener(\"fetch\",t=>{t.respondWith(async function(t){if(\"OPTIONS\"===t.method)return function(t){return null!==t.headers.get(\"Origin\")&&null!==t.headers.get(\"Access-Control-Request-Method\")&&null!==t.headers.get(\"Access-Control-Request-Headers\")?new Response(null,{headers:a}):new Response(null,{headers:{Allow:\"GET, HEAD, POST, PUT, OPTIONS\"}})}(t);let e,i=new URL(t.url);if(i.hostname=\"www.notion.so\",\"/robots.txt\"===i.pathname)return new Response(\"Sitemap: https://\"+n+\"/sitemap.xml\");if(\"/sitemap.xml\"===i.pathname){let t=new Response(function(){let t='<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">';return r.forEach(e=>t+=\"<url><loc>https://\"+n+\"/\"+e+\"</loc></url>\"),t+=\"</urlset>\",t}());return t.headers.set(\"content-type\",\"application/xml\"),t}if(i.pathname.startsWith(\"/app\")&&i.pathname.endsWith(\"js\")){e=await fetch(i.toString());let t=await e.text();return e=new Response(t.replace(/www.notion.so/g,n).replace(/notion.so/g,n),e),e.headers.set(\"Content-Type\",\"application/x-javascript\"),e}if(i.pathname.startsWith(\"/api\"))return e=await fetch(i.toString(),{body:i.pathname.startsWith(\"/api/v3/getPublicPageData\")?null:t.body,headers:{\"content-type\":\"application/json;charset=UTF-8\",\"user-agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36\"},method:\"POST\"}),e=new Response(e.body,e),e.headers.set(\"Access-Control-Allow-Origin\",\"*\"),e;if(r.indexOf(i.pathname.slice(1))>-1){const t=o[i.pathname.slice(1)];return Response.redirect(\"https://\"+n+\"/\"+t,301)}e=await fetch(i.toString(),{body:t.body,headers:t.headers,method:t.method}),e=new Response(e.body,e),e.headers.delete(\"Content-Security-Policy\"),e.headers.delete(\"X-Content-Security-Policy\");return async function(t,e){return(new HTMLRewriter).on(\"title\",new l).on(\"meta\",new l).on(\"head\",new d).on(\"body\",new p(e)).transform(t)}(e,o)}(t.request))});const a={\"Access-Control-Allow-Origin\":\"*\",\"Access-Control-Allow-Methods\":\"GET, HEAD, POST, PUT, OPTIONS\",\"Access-Control-Allow-Headers\":\"Content-Type\"};class l{element(t){\"og:title\"!==t.getAttribute(\"property\")&&\"twitter:title\"!==t.getAttribute(\"name\")||t.setAttribute(\"content\",\"Notion — Marc Reyes\"),\"title\"===t.tagName&&t.setInnerContent(\"Notion — Marc Reyes\"),\"description\"!==t.getAttribute(\"name\")&&\"og:description\"!==t.getAttribute(\"property\")&&\"twitter:description\"!==t.getAttribute(\"name\")||t.setAttribute(\"content\",\"Notion website by Marc Reyes\"),\"og:url\"!==t.getAttribute(\"property\")&&\"twitter:url\"!==t.getAttribute(\"name\")||t.setAttribute(\"content\",n),\"apple-itunes-app\"===t.getAttribute(\"name\")&&t.remove()}}class d{element(t){t.append(`<link href=\"https://fonts.googleapis.com/css?family=${\"Varela\".replace(\" \",\"+\")}:Regular,Bold,Italic&display=swap\" rel=\"stylesheet\">\\n        <style>* { font-family: \"Varela\" !important; }</style>`,{html:!0}),t.append(\"<style>\\n      div.notion-topbar > div > div:nth-child(3) { display: none !important; }\\n      div.notion-topbar > div > div:nth-child(4) { display: none !important; }\\n      div.notion-topbar > div > div:nth-child(5) { display: none !important; }\\n      div.notion-topbar > div > div:nth-child(6) { display: none !important; }\\n      div.notion-topbar-mobile > div:nth-child(3) { display: none !important; }\\n      div.notion-topbar-mobile > div:nth-child(4) { display: none !important; }\\n      div.notion-topbar > div > div:nth-child(1n).toggle-mode { display: block !important; }\\n      div.notion-topbar-mobile > div:nth-child(1n).toggle-mode { display: block !important; }\\n      </style>\",{html:!0})}}class p{constructor(t){this.SLUG_TO_PAGE=t}element(t){t.append(`<div style=\"display:none\">Powered by <a href=\"http://fruitionsite.com\">Fruition</a></div>\\n      <script>\\n      window.CONFIG.domainBaseUrl = 'https://${n}';\\n      const SLUG_TO_PAGE = ${JSON.stringify(this.SLUG_TO_PAGE)};\\n      const PAGE_TO_SLUG = {};\\n      const slugs = [];\\n      const pages = [];\\n      const el = document.createElement('div');\\n      let redirected = false;\\n      Object.keys(SLUG_TO_PAGE).forEach(slug => {\\n        const page = SLUG_TO_PAGE[slug];\\n        slugs.push(slug);\\n        pages.push(page);\\n        PAGE_TO_SLUG[page] = slug;\\n      });\\n      function getPage() {\\n        return location.pathname.slice(-32);\\n      }\\n      function getSlug() {\\n        return location.pathname.slice(1);\\n      }\\n      function updateSlug() {\\n        const slug = PAGE_TO_SLUG[getPage()];\\n        if (slug != null) {\\n          history.replaceState(history.state, '', '/' + slug);\\n        }\\n      }\\n      function onDark() {\\n        el.innerHTML = '<div title=\"Change to Light Mode\" style=\"margin-left: auto; margin-right: 14px; min-width: 0px;\"><div role=\"button\" tabindex=\"0\" style=\"user-select: none; transition: background 120ms ease-in 0s; cursor: pointer; border-radius: 44px;\"><div style=\"display: flex; flex-shrink: 0; height: 14px; width: 26px; border-radius: 44px; padding: 2px; box-sizing: content-box; background: rgb(46, 170, 220); transition: background 200ms ease 0s, box-shadow 200ms ease 0s;\"><div style=\"width: 14px; height: 14px; border-radius: 44px; background: white; transition: transform 200ms ease-out 0s, background 200ms ease-out 0s; transform: translateX(12px) translateY(0px);\"></div></div></div></div>';\\n        document.body.classList.add('dark');\\n        __console.environment.ThemeStore.setState({ mode: 'dark' });\\n      };\\n      function onLight() {\\n        el.innerHTML = '<div title=\"Change to Dark Mode\" style=\"margin-left: auto; margin-right: 14px; min-width: 0px;\"><div role=\"button\" tabindex=\"0\" style=\"user-select: none; transition: background 120ms ease-in 0s; cursor: pointer; border-radius: 44px;\"><div style=\"display: flex; flex-shrink: 0; height: 14px; width: 26px; border-radius: 44px; padding: 2px; box-sizing: content-box; background: rgba(135, 131, 120, 0.3); transition: background 200ms ease 0s, box-shadow 200ms ease 0s;\"><div style=\"width: 14px; height: 14px; border-radius: 44px; background: white; transition: transform 200ms ease-out 0s, background 200ms ease-out 0s; transform: translateX(0px) translateY(0px);\"></div></div></div></div>';\\n        document.body.classList.remove('dark');\\n        __console.environment.ThemeStore.setState({ mode: 'light' });\\n      }\\n      function toggle() {\\n        if (document.body.classList.contains('dark')) {\\n          onLight();\\n        } else {\\n          onDark();\\n        }\\n      }\\n      function addDarkModeButton(device) {\\n        const nav = device === 'web' ? document.querySelector('.notion-topbar').firstChild : document.querySelector('.notion-topbar-mobile');\\n        el.className = 'toggle-mode';\\n        el.addEventListener('click', toggle);\\n        nav.appendChild(el);\\n        onLight();\\n      }\\n      const observer = new MutationObserver(function() {\\n        if (redirected) return;\\n        const nav = document.querySelector('.notion-topbar');\\n        const mobileNav = document.querySelector('.notion-topbar-mobile');\\n        if (nav && nav.firstChild && nav.firstChild.firstChild\\n          || mobileNav && mobileNav.firstChild) {\\n          redirected = true;\\n          updateSlug();\\n          addDarkModeButton(nav ? 'web' : 'mobile');\\n          const onpopstate = window.onpopstate;\\n          window.onpopstate = function() {\\n            if (slugs.includes(getSlug())) {\\n              const page = SLUG_TO_PAGE[getSlug()];\\n              if (page) {\\n                history.replaceState(history.state, 'bypass', '/' + page);\\n              }\\n            }\\n            onpopstate.apply(this, [].slice.call(arguments));\\n            updateSlug();\\n          };\\n        }\\n      });\\n      observer.observe(document.querySelector('#notion-app'), {\\n        childList: true,\\n        subtree: true,\\n      });\\n      const replaceState = window.history.replaceState;\\n      window.history.replaceState = function(state) {\\n        if (arguments[1] !== 'bypass' && slugs.includes(getSlug())) return;\\n        return replaceState.apply(window.history, arguments);\\n      };\\n      const pushState = window.history.pushState;\\n      window.history.pushState = function(state) {\\n        const dest = new URL(location.protocol + location.host + arguments[2]);\\n        const id = dest.pathname.slice(-32);\\n        if (pages.includes(id)) {\\n          arguments[2] = '/' + PAGE_TO_SLUG[id];\\n        }\\n        return pushState.apply(window.history, arguments);\\n      };\\n      const open = window.XMLHttpRequest.prototype.open;\\n      window.XMLHttpRequest.prototype.open = function() {\\n        arguments[1] = arguments[1].replace('${n}', 'www.notion.so');\\n        return open.apply(this, [].slice.call(arguments));\\n      };\\n    <\\/script>`,{html:!0})}}}]);","extractedComments":[]}